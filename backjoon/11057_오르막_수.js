const fs=require('fs');
const input=fs.readFileSync("example.txt").toString().trim().split(' ');
const n=input[0]
const dp=[0,[1,1,1,1,1,1,1,1,1,1]]
for(let i=2;i<=n;i++){
    dp[i]=[]
    dp[i][0]=dp[i-1][0]%10007
    for(let j=1;j<10;j++){ //0번째 인덱스는 어차피 1개(ex)0000) 이므로 1번 인덱스부터 시작
        dp[i][j]=(dp[i][j-1]+dp[i-1][j])%10007
    }
}
console.log(dp)
console.log(dp[n].reduce((a,c)=>a+c)%10007)

//0으로 끝나는 수,1로 끝나는 수 .....9로 끝나는 수 순서대로 dp배열에 저장됨
//ex)3자리 수 일 경우
//   0로 끝나는 세자리 경우의 수 => 000 (dp[i][j-1])
//   1로 끝나는 두자리 경우의 수 => 01,11 (dp[i-1][j])
//   이므로 1로 끝나는 세자리 경우의 수는 => 001,011,111 (3개)

//   1로 끝나는 세자리 경우의 수 => 001,011,111 (dp[i][j-1])
//   2로 끝나는 두자리 경우의 수 => 02,12,22    (dp[i-1][j])
//   이므로 2로 끝나는 세자리 경우의 수는 => 002,012,112,022,122,222 (6개)
